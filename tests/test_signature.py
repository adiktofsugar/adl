from context import xml_tools

import unittest
import base64
from lxml import etree
from cryptography.hazmat.primitives.serialization import load_der_private_key

class TestSignature(unittest.TestCase):
  def test_serialize(self):
    self.assertTrue(True)

  def test_hash(self):
    sxml = "AQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAAHZnVsZmlsbAIBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAR1c2VyAgQALXVybjp1dWlkOmQ1MzFjYjFhLTZmYmYtNDJlNi05YzA1LTE1NjA2OWJjMGVmMgMBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAZkZXZpY2UCBAAtdXJuOnV1aWQ6YmE4MWM5Y2MtNGE0Yi00OGNlLTg4YTgtN2E2M2ZlNGMyNDczAwEAGWh0dHA6Ly9ucy5hZG9iZS5jb20vYWRlcHQACmRldmljZVR5cGUCBAAKc3RhbmRhbG9uZQMBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0ABBmdWxmaWxsbWVudFRva2VuBQAAAARhdXRoAAR1c2VyBQAAAA9mdWxmaWxsbWVudFR5cGUAA2J1eQIBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAtkaXN0cmlidXRvcgIEAC11cm46dXVpZDoxOGZlMzAyMi1lYjI0LTRmZDEtOGY2Yy1lNjMxNDBjMDEzY2EDAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAALb3BlcmF0b3JVUkwCBAAsaHR0cDovL2FjczQuc2hvcnRjb3ZlcnMuY29tOjgwODAvZnVsZmlsbG1lbnQDAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAALdHJhbnNhY3Rpb24CBAAkZDllZmZhMGYtMzNmNi00OWE3LWE0NDYtZGVhY2I3ZmJiMmI2AwEAGWh0dHA6Ly9ucy5hZG9iZS5jb20vYWRlcHQACmV4cGlyYXRpb24CBAAZMjAxOS0wNy0yN1QyMjoyNDo1OC0wNDowMAMBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0ABByZXNvdXJjZUl0ZW1JbmZvAgEAGWh0dHA6Ly9ucy5hZG9iZS5jb20vYWRlcHQACHJlc291cmNlAgQALXVybjp1dWlkOjUzYjdhM2UyLWMwY2EtNDY4YS04NWViLTM4YjQwZmZlN2IzNAMBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAxyZXNvdXJjZUl0ZW0CBAABMAMBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAhtZXRhZGF0YQIBACBodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLwAFdGl0bGUCBAAIQ2FsYW1pdHkDAQAgaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8AB2NyZWF0b3ICBAARQnJhbmRvbiBTYW5kZXJzb24DAQAgaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8ACXB1Ymxpc2hlcgIEAB1SYW5kb20gSG91c2UgQ2hpbGRyZW4ncyBCb29rcwMBACBodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLwAKaWRlbnRpZmllcgIEAC11cm46dXVpZDo1M2I3YTNlMi1jMGNhLTQ2OGEtODVlYi0zOGI0MGZmZTdiMzQDAQAgaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8ABmZvcm1hdAIEABRhcHBsaWNhdGlvbi9lcHViK3ppcAMBACBodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLwAIbGFuZ3VhZ2UCBAAFZW4tVVMDAwEAGWh0dHA6Ly9ucy5hZG9iZS5jb20vYWRlcHQADGxpY2Vuc2VUb2tlbgIBABlodHRwOi8vbnMuYWRvYmUuY29tL2FkZXB0AAhyZXNvdXJjZQIEAC11cm46dXVpZDo1M2I3YTNlMi1jMGNhLTQ2OGEtODVlYi0zOGI0MGZmZTdiMzQDAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAALcGVybWlzc2lvbnMCAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAAHZGlzcGxheQIDAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAAHZXhjZXJwdAIDAQAZaHR0cDovL25zLmFkb2JlLmNvbS9hZGVwdAAFcHJpbnQCAwEAGWh0dHA6Ly9ucy5hZG9iZS5jb20vYWRlcHQABHBsYXkCAwMDAwMD"
    h = xml_tools.xml_hash(base64.b64decode(sxml))
    expected_hash = "lOpmhakiA3aF/VbbFMiIV1HhsYo="
    self.assertEqual(base64.b64encode(h), expected_hash)

  def test_encrypt(self):
    h = base64.b64decode("lOpmhakiA3aF/VbbFMiIV1HhsYo=")
    k = "MIICXgIBAAKBgQDUMVSb7GkiIkcUGS9VuY2I5jvmyfNajNPhWuBD4MNnxJ+I/qPunyBqscgH1DKkDj7JGkPKtOVfNi7bCYrO0kcfoOUUxTRKAHXAEd8d7lbeQVlRV0fu2NvAySuFN/QnaQAmmc+rsuQHMEP0IwSYEB5CwUPZxcAowMskt7qHDLFQQwIDAQABAoGBAMYH3+nBAgE8Mk+8jWOYz1FjZaYm9XmdkqRvtntCybsPUsB8vauWUJ+imYdM75ISRWBTpc8JckOggqwjRKturbZPw5Z2+7Q9y3Je9a02VjmmQWZ7n2EAHkvMBx88OhBDUfyzrR5vQbfBbXY9SZTFMyACh/26KVlVIGSAiIPokPbpAkEA+khr5zviKZa0X6C+5o6wIxBUlyrOIreq3pKW0azVFKq0Bi146N7yfQ1Hbq7d0JyruzKrMGpWeFNL1qX/bqpqtwJBANkKK0gl+P3ehZTi1kSWbT4YUJYvA5/Fr3P9/n7iVcj6viGYXstXgsIVeN8txJmN5hK8mo6XjrFq3pBA0s0/qtUCQQDRPZaoPNI5PrsRb4vpqMTsq4xszOaE89QwO5FHPhzuKEBVIdMBrNJBZcagbCUZcMHJwPSJh30/HzQ6AZFo7aRFAkBZKUdMlWTrjf2cg294r79jEgQRHnFDsqd4ZDCnmX2aWf+/t2PB70plRwLn1Fp+pn+M1PQ9fd993SRfaHHxJaWdAkEA9AW8Olvx7wwoBNeO8d0/OFB1Li17eonXcvfrzioP2w2Zke45ex0l8c5CaW7pvnc6M4G3tdLdnTT8C4s3bYYGyA=="
    s = xml_tools.encrypt(h, base64.b64decode(k))
    expected_sig = "XYQBUCcG/5o0HySxlbCBiXTkoydVIih6n2UuFLOdiXfEcjHDDDYT5GgcIjrE42PkjKXvURA7vdYO9S3OEPN3Q/d7QUay6V8TQgxN+v+k6pFwsVW2UVZAdpAKCVxdLBHfFfACXl3Mq4I8sXtTh5qnLXaFIJVI6SNSrc3vpMLuHgg="
    self.assertEqual(base64.b64encode(s), expected_sig)
    
  def test_sign(self):
    expected_sig = "XYQBUCcG/5o0HySxlbCBiXTkoydVIih6n2UuFLOdiXfEcjHDDDYT5GgcIjrE42PkjKXvURA7vdYO9S3OEPN3Q/d7QUay6V8TQgxN+v+k6pFwsVW2UVZAdpAKCVxdLBHfFfACXl3Mq4I8sXtTh5qnLXaFIJVI6SNSrc3vpMLuHgg="
    k = "MIICXgIBAAKBgQDUMVSb7GkiIkcUGS9VuY2I5jvmyfNajNPhWuBD4MNnxJ+I/qPunyBqscgH1DKkDj7JGkPKtOVfNi7bCYrO0kcfoOUUxTRKAHXAEd8d7lbeQVlRV0fu2NvAySuFN/QnaQAmmc+rsuQHMEP0IwSYEB5CwUPZxcAowMskt7qHDLFQQwIDAQABAoGBAMYH3+nBAgE8Mk+8jWOYz1FjZaYm9XmdkqRvtntCybsPUsB8vauWUJ+imYdM75ISRWBTpc8JckOggqwjRKturbZPw5Z2+7Q9y3Je9a02VjmmQWZ7n2EAHkvMBx88OhBDUfyzrR5vQbfBbXY9SZTFMyACh/26KVlVIGSAiIPokPbpAkEA+khr5zviKZa0X6C+5o6wIxBUlyrOIreq3pKW0azVFKq0Bi146N7yfQ1Hbq7d0JyruzKrMGpWeFNL1qX/bqpqtwJBANkKK0gl+P3ehZTi1kSWbT4YUJYvA5/Fr3P9/n7iVcj6viGYXstXgsIVeN8txJmN5hK8mo6XjrFq3pBA0s0/qtUCQQDRPZaoPNI5PrsRb4vpqMTsq4xszOaE89QwO5FHPhzuKEBVIdMBrNJBZcagbCUZcMHJwPSJh30/HzQ6AZFo7aRFAkBZKUdMlWTrjf2cg294r79jEgQRHnFDsqd4ZDCnmX2aWf+/t2PB70plRwLn1Fp+pn+M1PQ9fd993SRfaHHxJaWdAkEA9AW8Olvx7wwoBNeO8d0/OFB1Li17eonXcvfrzioP2w2Zke45ex0l8c5CaW7pvnc6M4G3tdLdnTT8C4s3bYYGyA=="

    filename = "files/calamity.ffquery"
    xml_str = etree.tostring(etree.parse(filename).getroot())
    s = xml_tools.generate_signature(xml_str, base64.b64decode(k))
    self.assertEqual(s, expected_sig)

if __name__ == '__main__':
  unittest.main()
